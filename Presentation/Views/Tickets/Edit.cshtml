@model Application.DTOs.UpdateTicketDTO
@using Domain.Entities
@{
    ViewData["Title"] = "Edit Ticket";
    var events       = ViewData["Events"]    as IEnumerable<Event>          ?? Enumerable.Empty<Event>();
    var attendees    = ViewData["Attendees"] as IEnumerable<Attendee>       ?? Enumerable.Empty<Attendee>();
    var categories   = ViewData["CategoryList"] as IEnumerable<TicketCategory>
                          ?? Enum.GetValues(typeof(TicketCategory)).Cast<TicketCategory>();
}

<h1>Edit Ticket</h1>
<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="TicketType"></label>
        <select asp-for="TicketType" class="form-control">
            @foreach(var cat in categories) {
            <option value="@cat" selected="@(cat.ToString()==Model.TicketType)">
                @cat
            </option>
            }
        </select>
        <span asp-validation-for="TicketType" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EventId"></label>
        <select asp-for="EventId" class="form-control">
            @foreach(var ev in events) {
            <option value="@ev.Id" selected="@(ev.Id==Model.EventId)">
                @ev.Name
            </option>
            }
        </select>
        <span asp-validation-for="EventId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AttendeeId"></label>
        <select asp-for="AttendeeId" class="form-control">
            @foreach(var a in attendees) {
            <option value="@a.Id" selected="@(a.Id==Model.AttendeeId)">
                @a.Name
            </option>
            }
        </select>
        <span asp-validation-for="AttendeeId" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
    <a asp-action="Index" class="btn btn-secondary">Cancel</a>
</form>
<partial name="_ValidationScriptsPartial" />
