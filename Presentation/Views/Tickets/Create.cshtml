@model Application.DTOs.CreateTicketDTO
@using Domain.Entities

@{
    ViewData["Title"] = "Create Ticket";
    // Ensure we never have a null list to iterate over
    var events       = ViewData["Events"]    as List<Event>       ?? new List<Event>();
    var attendees    = ViewData["Attendees"] as List<Attendee>    ?? new List<Attendee>();
    var categoryList = ViewData["CategoryList"] as IEnumerable<TicketCategory>
                          ?? new List<TicketCategory>();
}

<h2>Create Ticket</h2>

<div asp-validation-summary="ModelOnly" class="text-danger"></div>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="TicketType"></label>
        <select asp-for="TicketType" class="form-control">
            @foreach (var cat in categoryList)
            {
            <option value="@cat">@cat</option>
            }
        </select>
        <span asp-validation-for="TicketType" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="EventId">Event</label>
        <select asp-for="EventId" class="form-control">
            @foreach (var ev in events)
            {
            <option value="@ev.Id">@ev.Name</option>
            }
        </select>
        <span asp-validation-for="EventId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="AttendeeId">Attendee</label>
        <select asp-for="AttendeeId" class="form-control">
            @foreach (var att in attendees)
            {
            <option value="@att.Id">@att.Name</option>
            }
        </select>
        <span asp-validation-for="AttendeeId" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-success">Create</button>
</form>

<partial name="_ValidationScriptsPartial" />
