@model IEnumerable<MyMVCApp.Models.Ticket>
@using MyMVCApp.Models
@using System.Collections.Generic
@using System.Linq

@{
    ViewData["Title"] = "Tickets";
    
    // Get the current sort order from the query string (e.g., "price_asc" or "price_desc").
    var currentSort = ViewContext.HttpContext.Request.Query["sortOrder"].ToString();
    
    // Determine the new sort order for the link.
    var newSortParam = currentSort == "price_asc" ? "price_desc" : "price_asc";
    
    // Retrieve filter data from ViewData.
    var events = (List<Event>?)ViewData["Events"] ?? new List<Event>();
    var categoryList = (IEnumerable<TicketCategory>?)ViewData["CategoryList"] 
                         ?? Enum.GetValues(typeof(TicketCategory)).Cast<TicketCategory>();
    
    // Get the selected filters from the query string.
    string eventFilterStr = ViewContext.HttpContext.Request.Query["eventFilter"].ToString();
    string categoryFilterStr = ViewContext.HttpContext.Request.Query["categoryFilter"].ToString();
    
    // Parse the event filter safely.
    int? selectedEvent = null;
    if (int.TryParse(eventFilterStr, out int eventIdVal))
    {
        selectedEvent = eventIdVal;
    }
    
    // Parse the category filter safely.
    TicketCategory? selectedCategory = null;
    if (!string.IsNullOrEmpty(categoryFilterStr) && Enum.TryParse<TicketCategory>(categoryFilterStr, out TicketCategory catVal))
    {
        selectedCategory = catVal;
    }
    
    // Helper function to return an icon based on ticket category.
    string GetCategoryIcon(TicketCategory category)
    {
        return category switch
        {
            TicketCategory.VIP => "üëë",
            TicketCategory.Backstage => "üîë",
            _ => "üéüÔ∏è"
        };
    }
}

<h2>Tickets</h2>

<!-- Filter Form -->
<form method="get" asp-action="Index" class="form-inline mb-3">
    <div class="form-group mr-2">
        <label>Event:</label>
        <select name="eventFilter" class="form-control ml-2">
            <option value="">-- All Events --</option>
            @foreach (var ev in events)
            {
                bool isSelected = (ev.EventId == selectedEvent);
                if (isSelected)
                {
                    <option value="@ev.EventId" selected>@ev.Name</option>
                }
                else
                {
                    <option value="@ev.EventId">@ev.Name</option>
                }
            }
        </select>
    </div>

    <div class="form-group mr-2">
        <label>Category:</label>
        <select name="categoryFilter" class="form-control ml-2">
            <option value="">-- All Categories --</option>
            @foreach (var cat in categoryList)
            {
                bool isSelected = cat.Equals(selectedCategory);
                if (isSelected)
                {
                    <option value="@cat" selected>@cat</option>
                }
                else
                {
                    <option value="@cat">@cat</option>
                }
            }
        </select>
    </div>

    <input type="hidden" name="sortOrder" value="@currentSort" />
    <button type="submit" class="btn btn-primary">Filter</button>
</form>

<a class="btn btn-primary mb-3" asp-action="Create">Add New Ticket</a>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>
                <a asp-action="Index"
                   asp-route-sortOrder="@newSortParam"
                   asp-route-eventFilter="@eventFilterStr"
                   asp-route-categoryFilter="@categoryFilterStr">
                    Price @(currentSort == "price_asc" ? "‚Üë" : currentSort == "price_desc" ? "‚Üì" : "")
                </a>
            </th>
            <th>Category</th>
            <th>Event</th>
            <th>Attendee</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            foreach (var ticket in Model)
            {
                var icon = GetCategoryIcon(ticket.Category);
                <tr>
                    <td>@ticket.Price</td>
                    <td>@icon @ticket.Category</td>
                    <td>@ticket.Event?.Name</td>
                    <td>@ticket.Attendee?.Name</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@ticket.TicketId">Edit</a> |
                        <a asp-action="Delete" asp-route-id="@ticket.TicketId">Delete</a>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>
