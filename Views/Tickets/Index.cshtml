@model IEnumerable<Domain.Entities.Ticket>
    @using Domain.Entities
    @using System.Collections.Generic
    @using System.Linq

    @{
    ViewData["Title"] = "Tickets";

    // Safe-cast the ViewData entries
    var events       = ViewData["Events"]    as List<Event>                ?? new();
    var categoryList = ViewData["CategoryList"] as IEnumerable<TicketCategory>
                          ?? Enum.GetValues(typeof(TicketCategory)).Cast<TicketCategory>();

    // Read current query params
    var currentSort     = ViewContext.HttpContext.Request.Query["sortOrder"].ToString();
    var newSortParam    = currentSort == "price_asc" ? "price_desc" : "price_asc";
    var eventFilterStr  = ViewContext.HttpContext.Request.Query["eventFilter"].ToString();
    var categoryFilterStr = ViewContext.HttpContext.Request.Query["categoryFilter"].ToString();

    int? selectedEvent = int.TryParse(eventFilterStr, out var evVal) ? evVal : null;
    TicketCategory? selectedCategory =
        Enum.TryParse<TicketCategory>(categoryFilterStr, out var cVal) ? cVal : null;

    string GetCategoryIcon(TicketCategory category) => category switch
    {
        TicketCategory.VIP       => "üëë",
        TicketCategory.Backstage => "üîë",
        _                        => "üéüÔ∏è"
    };
    }

    <h2>Tickets</h2>

    <form method="get" asp-action="Index" class="form-inline mb-3">
        <div class="form-group mr-2">
            <label>Event:</label>
            <select name="eventFilter" class="form-control ml-2">
                <option value="">-- All Events --</option>
                @foreach (var ev in events)
            {
                <option value="@ev.EventId" selected="@(ev.EventId == selectedEvent)">
                    @ev.Name
                </option>
            }
            </select>
        </div>

        <div class="form-group mr-2">
            <label>Category:</label>
            <select name="categoryFilter" class="form-control ml-2">
                <option value="">-- All Categories --</option>
                @foreach (var cat in categoryList)
            {
                <option value="@cat" selected="@(cat == selectedCategory)">
                    @cat
                </option>
            }
            </select>
        </div>

        <input type="hidden" name="sortOrder" value="@currentSort" />
        <button type="submit" class="btn btn-primary">Filter</button>
    </form>

    <a class="btn btn-primary mb-3" asp-action="Create">Add New Ticket</a>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index"
                       asp-route-sortOrder="@newSortParam"
                       asp-route-eventFilter="@eventFilterStr"
                       asp-route-categoryFilter="@categoryFilterStr">
                        Price @(currentSort == "price_asc" ? "‚Üë" : currentSort == "price_desc" ? "‚Üì" : "")
                    </a>
                </th>
                <th>Category</th>
                <th>Event</th>
                <th>Attendee</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var ticket in Model ?? Enumerable.Empty<Ticket>())
    {
        var icon = GetCategoryIcon(ticket.Category);
            <tr>
                <td>@ticket.Price</td>
                <td>@icon @ticket.Category</td>
                <td>@ticket.Event?.Name</td>
                <td>@ticket.Attendee?.Name</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@ticket.TicketId">Edit</a> |
                    <a asp-action="Delete" asp-route-id="@ticket.TicketId">Delete</a>
                </td>
            </tr>
    }
        </tbody>
    </table>
